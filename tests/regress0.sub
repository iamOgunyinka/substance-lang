static function testing( first_arg, second_arg )
{
	for each( a in [ 1, 2, 3, 4, 5, 9 ] ){
		show a;
	}
	foreach( b in { "a": 1, 1 + 1 : Foo(), Foo() : "Me" } ){
		show b.key();
		show b.value();
	}
	
	for each( s in {} ){}
	foreach( iter in [] ){
		//do nothing
	}
	var c = @{ return @( a ){ return 12 * first_arg + second_arg; }; };
	show c()( 15 );
}

var global_var = 12, global_lambda = @( a ){ show a; };

show global_lambda( global_var );

c = 12; // a variable declaration
c = new School();

//expects no error, same name but different parameter size
static function testing( first_arg )
{
}

// OK
static function testing_another(){
}

function main( a )
{
	do {
		testing( c , c + 1 );
		--c;
	} while( c <= 1 );
	c += 10; // uses the global variable c
	while( c <= 100 ){
		show c;
		c = c + 2;
	}
	
	switch( 1 + 2 )
	{
	case 1:
		show 1;
		break;
	case 2: 
		var c = 2;
		show c;
		break;
	case 3: 
	else:
	block {
		show 3;
		break;
		}
	}
}
